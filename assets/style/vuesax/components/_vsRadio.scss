.con-vs-radio {
  position: relative;
  display: flex;
  align-items: center;

  &:hover {
    .vs-radio--border {
      border: 2px solid rgb(160, 160, 160);
    }
  }
}

.vs-radio--label {
  @include propWithDir(margin, left, 5px);
  cursor: pointer;
}

.vs-radio {
  width: 18px;
  height: 18px;
  position: relative;
  display: block;
  border-radius: 50%;
  cursor: pointer;
  flex-shrink: 0;
}

.vs-radio--border {
  border-radius: 50%;
  width: 100%;
  height: 100%;
  position: absolute;
  left: 0;
  transition: all 0.25s ease;
  background: transparent;
  top: 0;
  border: 1px solid rgb(200, 200, 200);
}

.vs-radio--circle {
  transition: all 0.25s ease;
  transform: scale(0.1);
  opacity: 0;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  position: absolute;
  left: 0;
  top: 0;
}

.vs-radio--input {
  position: absolute;
  left: 0;
  opacity: 0;
  width: 20px;

  &:checked {
    + .vs-radio {
      cursor: default;

      .vs-radio--circle {
        transform: scale(1);
        opacity: 1;
      }

      .vs-radio--border {
        opacity: 0;
        transform: scale(0.3);
      }
    }
  }

  &:active {
    + .vs-radio {

      .vs-radio--border {
        transform: scale(1.1);
      }
    }
  }

  &:disabled {
    + .vs-radio,
    + .vs-radio + .vs-radio--label {
      pointer-events: none;
      cursor: default;
    }

    + .vs-radio {
      opacity: 0.4;

      .vs-radio--circle {
        pointer-events: none;
      }

      .vs-radio--border {
        border: 1px solid rgb(180, 180, 180);
        background: rgb(210, 210, 210);
        pointer-events: none;
      }
    }
  }
}

@each $colorx,$hexColor in $vs-colors {
  .vs-radio-#{$colorx} {
    .vs-radio--circle {
      background: getColor($colorx, 1);
      box-shadow: 0 3px 12px 0 getColor($colorx, 0.4);
    }
  }
}
