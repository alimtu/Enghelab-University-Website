.vs-input-number {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin: 5px 10px;
  background: rgb(245, 245, 245);
  padding: 2px;
  border-radius: 5px;

  &.isChangeValue {
    .vs-input-number--input {
      //transform: translate(0, -2px);
      opacity: 0.5;
    }
  }

  .vs-input-number--input {
    transition: all 0.2s ease;
    width: 40px;
    min-width: 40px;
    border: 0;
    text-align: center;
    background: transparent;
    padding: 4px;
    -moz-appearance: textfield;

    box-shadow: none;
  }

  .vs-input-number--input[type=number]::-webkit-inner-spin-button,
  .vs-input-number--input[type=number]::-webkit-outer-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }

  button {
    min-width: 22px;
    min-height: 22px;
    padding: 0;
    margin: 0;
    position: relative;
    border: 0;
    border-radius: 5px;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;
    color: rgba(255, 255, 255, 1);
    backface-visibility: hidden;

    &:disabled {
      opacity: $vs-disabled-opacity;
      cursor: default;
      pointer-events: none;
    }

    i {
      font-size: 0.9rem;
    }

    &.vs-input-number--button-plus {
      //@include propWithDir(transform, null, (10px));

      &:active {
        //@include propWithDir(transform, null, (10px), scale(.9));
        @include propWithDir(transform, null, (0px), scale(.9));
      }

      &:disabled {
        opacity: $vs-disabled-opacity;
        cursor: default;
        pointer-events: none;
        background-color: rgba(0, 0, 0, $vs-disabled-opacity);
      }
    }

    &.vs-input-number--button-plus.limit {
      opacity: $vs-disabled-opacity;
      cursor: default;
      pointer-events: none;
      background-color: rgba(0, 0, 0, $vs-disabled-opacity);
    }

    &.vs-input-number--button-less {
      //@include propWithDir(transform, null, (-10px));

      &:active {
        //@include propWithDir(transform, null, (-10px), scale(.9));
        @include propWithDir(transform, null, (0px), scale(.9));
      }

      &:disabled {
        opacity: $vs-disabled-opacity;
        cursor: default;
        pointer-events: none;
        background-color: rgba(0, 0, 0, $vs-disabled-opacity);
      }
    }

    &.vs-input-number--button-less.limit {
      opacity: $vs-disabled-opacity;
      cursor: default;
      pointer-events: none;
      background-color: rgba(0, 0, 0, $vs-disabled-opacity);
    }
  }

  &.vs-input-number-size-medium {
    input {
      padding: 3px;
      font-size: 0.8rem;
    }

    button {
      min-width: 19px;
      min-height: 19px;

      i {
        font-size: 0.8rem;
      }

      &.vs-input-number--button-plus {
        //@include propWithDir(transform, null, (8px));

        &:active {
          //@include propWithDir(transform, null, (8px), scale(.9));
          @include propWithDir(transform, null, (0px), scale(.9));
        }
      }

      &.vs-input-number--button-less {
        //@include propWithDir(transform, null, (-8px));

        &:active {
          //@include propWithDir(transform, null, (-8px), scale(.9));
          @include propWithDir(transform, null, (0px), scale(.9));
        }
      }
    }
  }

  &.vs-input-number-size-small {
    .vs-input-number--input {
      padding: 2px;
      font-size: 0.7rem;
    }

    button {
      min-width: 16px;
      min-height: 16px;

      i {
        font-size: 0.7rem;
      }

      &.vs-input-number--button-plus {
        //@include propWithDir(transform, null, (7px));

        &:active {
          //@include propWithDir(transform, null, (7px), scale(.9));
          @include propWithDir(transform, null, (0px), scale(.9));
        }
      }

      &.vs-input-number--button-less {
        //@include propWithDir(transform, null, (-7px));

        &:active {
          //@include propWithDir(transform, null, (-7px), scale(.9));
          @include propWithDir(transform, null, (0px), scale(.9));
        }
      }
    }
  }

  &.vs-input-number-size-mini {
    .vs-input-number--input {
      padding: 1px;
      font-size: 0.6rem;
    }

    button {
      min-width: 14px;
      min-height: 14px;

      i {
        font-size: 0.6rem;
      }

      &.vs-input-number--button-plus {
        //@include propWithDir(transform, null, (6px));

        &:active {
          //@include propWithDir(transform, null, (6px), scale(.9));
          @include propWithDir(transform, null, (0px), scale(.9));
        }
      }

      &.vs-input-number--button-less {
        //@include propWithDir(transform, null, (-6px));

        &:active {
          //@include propWithDir(transform, null, (-6px), scale(.9));
          @include propWithDir(transform, null, (0px), scale(.9));
        }
      }
    }
  }
}

@each $colorx,$hexColor in $vs-colors {
  .vs-input-number-#{$colorx} {
    button {
      background: getColor($colorx, 1);

      &:hover {
        box-shadow: 0 3px 12px 0 getColor($colorx, 0.4);
      }
    }
  }
}
