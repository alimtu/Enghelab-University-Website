.con-vs-checkbox {
  @apply relative flex items-center gap-2;
  margin-left: 5px;
  margin-right: 0px;

  &.vs-checkbox-small {
    .vs-checkbox {
      width: 15px;
      height: 15px;

      .vs-icon {
        font-size: 0.7rem;
      }
    }
  }

  &.vs-checkbox-large {
    .vs-checkbox {
      @apply w-6 h-6;
    }
  }
}

.vs-checkbox--input {
  @apply absolute w-full h-full opacity-0;
  @apply cursor-pointer;
  z-index: 200;
  background: rgb(85, 215, 117);

  &:disabled {
    @apply cursor-default pointer-events-none;

    & + .vs-checkbox {
      @apply cursor-default pointer-events-none;
      opacity: $vs-disabled-opacity;

      .vs-checkbox--check {
        @apply cursor-default pointer-events-none;
      }
    }
  }

  &:active:checked {
    & + .vs-checkbox {
      .vs-checkbox--check {
        transform: translate(3px);
      }

      .vs-icon {
        transform: translate(6px);
      }
    }
  }

  &:checked {
    & + .vs-checkbox {
      transform: rotate(0deg);

      .vs-checkbox--check {
        transform: translate(0%);
      }

      .vs-icon {
        @apply opacity-100 text-white;
        @apply flex justify-center items-center;
        transform: translate(0);
      }
    }
  }
}

.vs-checkbox {
  @apply relative flex justify-center items-center overflow-hidden;
  @apply cursor-pointer rounded-sm;
  @apply w-5 h-5;
  transition: all 0.2s ease;
  transform: rotate(-90deg);
  box-sizing: border-box;
  @include propWithDir(margin, right, 5px);
}

.vs-checkbox--check {
  @apply w-full h-full absolute left-0;
  transform: translate(100%);
  transform-origin: right;
  transition: all 0.2s ease;
  z-index: 10;
}

.vs-checkbox--icon {
  @apply opacity-0;
  backface-visibility: visible;
  transition: all 0.2s ease-out;
  z-index: 100;
  transform: translate(30px);
  transform-origin: center;
}

@each $colorx,$hexColor in $vs-colors {
  .vs-checkbox-#{$colorx} {
    .vs-checkbox {
      border: 1px solid rgb(180, 180, 180) !important;
    }

    input {
      &:checked {
        & + .vs-checkbox {
          border: 1px solid getColor($colorx, 1) !important;
          background: getColor($colorx, 1);
        }
      }
    }
  }
}
