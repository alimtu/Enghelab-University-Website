.fade-tab-enter-active, .fade-tab-leave-active {
  transition: all 0.3s;
}

.fade-tab-enter, .fade-tab-leave-to {
  @apply top-0 opacity-0 absolute #{!important};
  transform: translate3d(-100%, 0, 0);
}

.fade-tab-leave-to {
  @apply top-0 opacity-0 absolute #{!important};
  transform: translate3d(100%, 0, 0);
}

.fade-tab-invert-enter-active, .fade-tab-invert-leave-active {
  transition: all 0.3s;
}

.fade-tab-invert-enter, .fade-tab-invert-leave-to {
  @apply top-0 opacity-0 absolute #{!important};
  transform: translate3d(100%, 0, 0);
}

.fade-tab-invert-leave-to {
  @apply top-0 opacity-0 absolute #{!important};
  transform: translate3d(-100%, 0, 0);
}

.fade-tab-vertical-enter-active, .fade-tab-vertical-leave-active {
  transition: all 0.3s;
}

.fade-tab-vertical-enter {
  @apply top-0 opacity-0 absolute #{!important};
  transform: translate3d(0, 100%, 0);
}

.fade-tab-vertical-leave-to {
  @apply top-0 opacity-0 absolute #{!important};
  transform: translate3d(0, -100%, 0);
}

.fade-tab-vertical-invert-enter-active, .fade-tab-vertical-invert-leave-active {
  transition: all 0.3s;
}

.fade-tab-vertical-invert-enter {
  @apply top-0 opacity-0 absolute #{!important};
  transform: translate3d(0, -100%, 0);
}

.fade-tab-vertical-invert-leave-to {
  @apply top-0 opacity-0 absolute #{!important};
  transform: translate3d(0, 100%, 0) !important;
}

.con-vs-tabs {
  @apply w-full relative;

  .con-slot-tabs {
    @apply relative block overflow-hidden;
  }

  .con-ul-tabs {
    @apply relative;
  }
}

.vs-tabs--ul {
  //@apply bg-grey-50 rounded-lg border border-grey-200 border-solid overflow-x-auto;
  @apply bg-transparent overflow-x-auto;
  @apply p-1.5 gap-x-2;
  @apply  w-full relative;

  @media (max-width: map-get($vs-grid-breakpoints,'md')) {
    @apply overflow-x-auto;
  }

  &.ul-tabs-center {
    @apply justify-center;
  }

  &.ul-tabs-right {
    @apply justify-end;
  }

  &.ul-tabs-fixed {
    @apply justify-between flex-nowrap  #{!important};
    @apply z-1;
    li {
      @apply w-full;
    }
  }
}

.vs-tabs--li {
  @apply block relative;

  button {
    color: inherit;
    font-family: inherit;
  }

  button.vs-tabs--btn {
    @apply px-3.5 py-2.5 m-0;
    @apply rounded-md;
    @apply bg-transparent;
    @apply whitespace-nowrap cursor-pointer;
    @apply relative w-full block;
    box-sizing: border-box;
    transition: all 0.2s ease;
    z-index: 100;

    &:hover:not(:disabled) {
      color: inherit;
    }
  }

  button:disabled {
    @apply cursor-default pointer-events-none #{!important};
    opacity: 0.5;
  }
}

.activeChild {
  button:not(:disabled) {
    color: inherit;
  }

  button.vs-tabs--btn {
    @apply border-b border-b-primary border-b-2 rounded-none;
    //@apply bg-white;
    //box-shadow: 0px 1px 3px rgba(16, 24, 40, 0.1), 0px 1px 2px rgba(16, 24, 40, 0.06);
  }
}

.vs-tabs--btn-tag {
  @apply absolute flex items-center justify-center;
  @apply w-5 h-5;
  @apply rounded border-0;
  @apply bg-white;
  @apply cursor-pointer;
  top: -10px;
  right: -10px;
  z-index: 200;
  box-shadow: 0 0 10px 0 rgba(0, 0, 0, 0.05);

  i {
    @apply pr-0 #{!important};
    font-size: 0.9rem;
  }
}

.vs-tabs--btn-icon + span {
  @include propWithDir(padding, left, 9px);
}

.vs-tabs-position-top {
  .vs-tabs--ul {
    @apply flex flex-wrap;
  }
}

.vs-tabs-position-bottom {
  .vs-tabs--ul {
    @apply flex border-b-0 #{!important};
    border-top: 1px solid rgba(0, 0, 0, 0.05);
  }

  .con-ul-tabs {
    order: 2;
  }
}

.vs-tabs-position-left {
  @apply flex;

  .con-ul-tabs {
    @apply float-left h-full block;
  }

  .vs-tabs--ul {
    @apply block w-auto border-b-0 #{!important};
    border-right: 1px solid rgba(0, 0, 0, 0.05);
  }

  .activeChild {
    button {
      padding: 10px 8px 10px 12px !important;
    }
  }
}

.vs-tabs-position-right {
  @apply flex;

  .con-slot-tabs {
    @apply w-full;
  }

  .con-ul-tabs {
    @apply float-left h-full block;
    order: 2;
  }

  .vs-tabs--ul {
    @apply block w-auto border-b-0 #{!important};
    border-left: 1px solid rgba(0, 0, 0, 0.05);
  }

  .activeChild {
    button {
      padding: 10px 12px 10px 8px !important;
    }
  }
}

@each $colorx,$hexColor in $vs-colors {
  .vs-tabs-#{$colorx} {
    .con-ul-tabs {
      button:not(:disabled) {
        &:hover {
          color: getColor($colorx, 1) !important;
        }
      }

      .activeChild {
        button {
          color: getColor($colorx, 1) !important;
        }
      }
    }
  }
}

.vs-tabs--content {
  @apply mt-2;
  @apply relative w-full block;
}
